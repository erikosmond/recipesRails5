upstream rails_app {
   server web:5000;
}
server {
   # define your domain
   server_name rafikitwist.com www.rafikitwist.com;
   # define the public application root
   root   /recipes/public;
   index  index.html;
   # define where Nginx should write its logs
   access_log /recipes/log/nginx.access.log;
   error_log /recipes/log/nginx.error.log;

   # deny requests for files that should never be accessed
   location ~ /\. {
      deny all;
   }
   location ~* ^.+\.(rb|log)$ {
      deny all;
   }

   # serve static (compiled) assets directly if they exist (for rails production)
   location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
      try_files $uri @rails;
      access_log off;
      gzip_static on;
      # to serve pre-gzipped version
      expires max;
      add_header Cache-Control public;

      add_header Last-Modified "";
      add_header ETag "";
      break;
   }

   # send non-static file requests to the app server
   location / {
      try_files $uri @rails;
   }
   location @rails {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://rails_app;
   }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/rafikitwist.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/rafikitwist.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = rafikitwist.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

   server_name rafikitwist.com;
    listen 80;
    return 404; # managed by Certbot


}
